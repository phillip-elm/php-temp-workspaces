<?php

namespace PhillipElm\TempWorkspaces;

use RecursiveDirectoryIterator;
use RecursiveIteratorIterator;

/**
 * Class DirectoryRemover
 *
 * @package PhillipElm\TempWorkspaces
 */
class DirectoryRemover
{
    /**
     * Completely remove the given directory.
     *
     * @param string $path
     *
     * @return bool
     */
    public static function remove(string $path): bool
    {
        if (strlen($path) < 17) {
            // "/tmp/{12 chars}" == 17 characters
            throw new \RuntimeException("Path $path is too short. Paths generated by this library are at least 17 characters in length.");
        }

        $it    = new RecursiveDirectoryIterator($path, RecursiveDirectoryIterator::SKIP_DOTS);
        $files = new RecursiveIteratorIterator($it, RecursiveIteratorIterator::CHILD_FIRST);

        foreach ($files as $file) {
            if ($file->isDir()) {
                rmdir($file->getRealPath());
            } else {
                unlink($file->getRealPath());
            }
        }

        return rmdir($path);
    }
}
